<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aowin.mapper.SoMainMapper">
    <insert id="addSoMain">
        insert into somain (SOID,
                            CreateTime, CustomerCode, Account, TipFee, ProductTotal, SOTotal, PayType, PrePayFee,
                            Remark, Status)
        values (#{somain.soId}, #{somain.createTime}, #{somain.customerCode}, #{somain.scmuserName},
                #{somain.tipFee}, #{somain.productTotal}, #{somain.soTotal}, #{somain.payType}, #{somain.prePayFee},
                #{somain.remark}, '1');
    </insert>
    <insert id="addSoItem">
        insert into soitem (SOID, ProductCode, UnitPrice, Num, UnitName, ItemPrice)
        values (#{soitem.soId}, #{soitem.productCode}, #{soitem.unitPrice}, #{soitem.num}, #{soitem.unitName},
                #{soitem.itemPrice})
    </insert>
    <update id="updateProduct">
        update product
        set SONum = SONum + #{num}
        where ProductCode = #{productcode}
    </update>
    <update id="updateDelProductSoNum">
        update product
        set SONum=SONum - #{num}
        where ProductCode = #{productcode}
    </update>
    <update id="endSomain">
        update somain
        set Status  = 4,
            EndTime = NOW(),
            EndUser = #{account}
        where SOID = #{soId};
    </update>
    <delete id="delSoItem">
        delete
        from soitem
        where SOID = #{soId}
    </delete>
    <delete id="delSoMain">
        delete
        from somain
        where SOID = #{soId}
    </delete>
    <select id="querySoMainByPage" resultType="com.aowin.domain.SoMain">
        select sm.*, c.Name customerName, s.Name scmuserName
        from somain sm
                 inner join customer c
                            on sm.CustomerCode = c.CustomerCode
                 inner join scmuser s
                            on sm.Account = s.Account
        group by sm.SOID
        order by sm.CreateTime asc
            limit #{page.currentPage}, #{page.pageSize}
    </select>
    <select id="getSoMainCount" resultType="java.lang.Integer">
        select count(*)
        from (select sm.*, c.Name customerName, s.Name scmuserName
              from somain sm
                       inner join customer c
                                  on sm.CustomerCode = c.CustomerCode
                       inner join scmuser s
                                  on sm.Account = s.Account
              group by sm.SOID
              order by sm.CreateTime asc) count
    </select>
    <select id="getSoItemsBySoId" resultType="com.aowin.domain.SoItem">
        select si.*, p.name productName
        from soitem si
                 inner join product p
                            on si.ProductCode = p.ProductCode
        where SOID = #{soId}
    </select>
    <select id="querySoMainBySoID" resultType="com.aowin.domain.SoMain">
        select *
        from somain
        where SOID = #{soid}
    </select>
    <select id="querySoMainProductCount" resultType="com.aowin.domain.PoItem">
        select num, ProductCode
        from soitem
        where SOID = #{soId};
    </select>
    <select id="querySoMainByPayType" resultType="com.aowin.domain.SoMain">
        select sm.SOID,sm.CreateTime,c.Name customerName,s.Name
        scmuserName,sm.TipFee,sm.ProductTotal,sm.SOTotal,sm.PayType,sm.PrePayFee,sm.Status
        from somain sm
        inner join customer c
        on sm.CustomerCode = c.CustomerCode
        inner join scmuser s
        on sm.Account = s.Account
        <where>
            <choose>
                <when test=" payType == 1">
                    and sm.PayType = 1 and sm.status = 3
                </when>
                <when test=" payType == 2">
                    and sm.PayType = 2 and sm.status = 2
                </when>
                <when test="payType == 3">
                    and sm.PayType = 3 and sm.status = 3
                </when>
            </choose>
        </where>
        group by sm.SOID order by sm.CreateTime asc
        limit #{page.currentPage},#{page.pageSize}
    </select>
    <select id="getSoMainCountByPayType" resultType="java.lang.Integer">
        select count(*) from (select sm.SOID,sm.CreateTime,c.Name customerName,s.Name
        scmuserName,sm.TipFee,sm.ProductTotal,sm.SOTotal,sm.PayType,sm.PrePayFee,sm.Status
        from somain sm
        inner join customer c
        on sm.CustomerCode = c.CustomerCode
        inner join scmuser s
        on sm.Account = s.Account
        <where>
            <choose>
                <when test="payType == 1">
                    and sm.PayType = 1 and sm.status = 3
                </when>
                <when test="payType == 2">
                    and sm.PayType = 2 and sm.status = 2
                </when>
                <when test="payType == 3">
                    and sm.PayType = 3 and sm.status = 3
                </when>
            </choose>
        </where>
        group by sm.SOID order by sm.CreateTime asc
        ) count;
    </select>
    <select id="querySoMainCondition" resultType="com.aowin.domain.SoMain">
        select sm.SOID,sm.CreateTime,c.Name customerName,s.Name
        scmuserName,sm.TipFee,sm.ProductTotal,sm.SOTotal,sm.PayType,sm.PrePayFee,sm.Status
        from somain sm
        inner join customer c
        on sm.CustomerCode = c.CustomerCode
        inner join scmuser s
        on sm.Account = s.Account
        <where>
            <if test="condition.soId != null and condition.soId !=''">
                and sm.SOID = #{condition.soId}
            </if>
            <if test="condition.customerCode != null and condition.customerCode !='' ">
                and sm.CustomerCode = #{condition.customerCode}
            </if>
            <if test="condition.startTime != null and condition.startTime != '' and condition.startTime != 'undefined'  ">
                and sm.CreateTime >= #{condition.startTime}
            </if>
            <if test="condition.endTime != null and condition.endTime != '' and condition.endTime != 'undefined' ">
                and #{condition.endTime} >= sm.CreateTime
            </if>
            <if test="condition.payType != 0 ">
                and sm.paytype = #{condition.payType}
            </if>
            <if test="condition.status != 0 ">
                and sm.status = #{condition.status}
            </if>
        </where>
        group by sm.SOID order by sm.CreateTime asc
        limit #{page.currentPage},#{page.pageSize}
    </select>
    <select id="querySoMainConditionCount" resultType="java.lang.Integer">
        select count(*) from(
        select sm.SOID,sm.CreateTime,c.Name customerName,s.Name
        scmuserName,sm.TipFee,sm.ProductTotal,sm.SOTotal,sm.PayType,sm.PrePayFee,sm.Status
        from somain sm
        inner join customer c
        on sm.CustomerCode = c.CustomerCode
        inner join scmuser s
        on sm.Account = s.Account
        <where>
            <if test="condition.soId != null and condition.soId !=''">
                and sm.SOID = #{condition.soId}
            </if>
            <if test="condition.customerCode != null and condition.customerCode !='' ">
                and sm.CustomerCode = #{condition.customerCode}
            </if>
            <if test="condition.startTime != null and condition.startTime != ''and condition.startTime != 'undefined' ">
                and sm.CreateTime >= #{condition.startTime}
            </if>
            <if test="condition.endTime != null and condition.endTime != '' and condition.endTime != 'undefined' ">
                and #{condition.endTime} >= sm.CreateTime
            </if>
            <if test="condition.payType != 0 ">
                and sm.paytype = #{condition.payType}
            </if>
            <if test="condition.status != 0 ">
                and sm.status = #{condition.status}
            </if>
        </where>
        group by sm.SOID order by sm.CreateTime asc
        )count
    </select>
    <select id="queryPoMainByPoId" resultType="com.aowin.domain.PoMain">
        select *
        from pomain
        where POID = #{poid}
    </select>
    <select id="querySoReport" resultType="com.aowin.domain.SoMain">
        select sm.SOID,sm.CreateTime,c.Name customerName,sm.CustomerCode,s.Name
        scmuserName,sm.TipFee,sm.ProductTotal,sm.SOTotal,sm.PayType,sm.PrePayFee,sm.Status,sm.PayTime,sm.PayUser
        from somain sm
        inner join customer c
        on sm.CustomerCode = c.CustomerCode
        inner join scmuser s
        on sm.Account = s.Account
        <where>
            <if test="startDate!=null and startDate!='' and startDate!='null' ">
                and sm.CreateTime &gt; #{startDate}
            </if>
            <if test="endDate!=null and endDate!='' and endDate!='null' ">
                and sm.CreateTime &lt; #{endDate}
            </if>
        </where>
        group by sm.SOID order by sm.CreateTime asc
        limit #{page.currentPage},#{page.pageSize}
    </select>
    <select id="querySoReportCount" resultType="java.lang.Integer">
        select count(*) from (
        select sm.SOID,sm.CreateTime,c.Name customerName,sm.CustomerCode,s.Name
        scmuserName,sm.TipFee,sm.ProductTotal,sm.SOTotal,sm.PayType,sm.PrePayFee,sm.Status
        from somain sm
        inner join customer c
        on sm.CustomerCode = c.CustomerCode
        inner join scmuser s
        on sm.Account = s.Account
        <where>
            <if test="startDate!=null and startDate!='' and startDate!='null' ">
                and sm.CreateTime &gt; #{startDate}
            </if>
            <if test="endDate!=null and endDate!='' and endDate!='null' ">
                and sm.CreateTime &lt; #{endDate}
            </if>
        </where>
        group by sm.SOID order by sm.CreateTime asc
       )count
    </select>
</mapper>