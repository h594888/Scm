<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.aowin.mapper.ScmUserMapper">
    <resultMap id="BaseResultMap" type="com.aowin.domain.ScmUser">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Nov 24 09:31:10 CST 2022.
        -->
        <id column="account" jdbcType="VARCHAR" property="account"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="createDate" jdbcType="VARCHAR" property="createDate"/>
        <result column="status" jdbcType="INTEGER" property="status"/>
        <collection property="modelName" ofType="String" javaType="arrayList">
            <constructor>
                <arg column="modelName"></arg>
            </constructor>
        </collection>
    </resultMap>
    <sql id="Base_Column_List">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Nov 24 09:31:10 CST 2022.
        -->
        account, password, name, createDate, status
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Nov 24 09:31:10 CST 2022.
        -->
        select
        <include refid="Base_Column_List"/>
        from scmuser
        where account = #{account,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Nov 24 09:31:10 CST 2022.
        -->
        delete from scmuser
        where account = #{account,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.aowin.domain.ScmUser">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Nov 24 09:31:10 CST 2022.
        -->
        insert into scmuser (account, password, name,
        createDate, status)
        values (#{account,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
        #{createDate,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" parameterType="com.aowin.domain.ScmUser">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Nov 24 09:31:10 CST 2022.
        -->
        insert into scmuser
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="account != null">
                account,
            </if>
            <if test="password != null">
                password,
            </if>
            <if test="name != null">
                name,
            </if>
            <if test="createDate != null">
                createDate,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="account != null">
                #{account,jdbcType=VARCHAR},
            </if>
            <if test="password != null">
                #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                #{name,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                #{status,jdbcType=INTEGER},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.aowin.domain.ScmUser">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Nov 24 09:31:10 CST 2022.
        -->
        update scmuser
        <set>
            <if test="password != null">
                password = #{password,jdbcType=VARCHAR},
            </if>
            <if test="name != null">
                name = #{name,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                createDate = #{createDate,jdbcType=VARCHAR},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=INTEGER},
            </if>
        </set>
        where account = #{account,jdbcType=VARCHAR}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.aowin.domain.ScmUser">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Thu Nov 24 09:31:10 CST 2022.
        -->
        update scmuser
        set password = #{password,jdbcType=VARCHAR},
        name = #{name,jdbcType=VARCHAR},
        createDate = #{createDate,jdbcType=VARCHAR},
        status = #{status,jdbcType=INTEGER}
        where account = #{account,jdbcType=VARCHAR}
    </update>

    <select id="queryUserByActAndPwd" resultMap="BaseResultMap">
        select s.*,group_concat(sm.modelname SEPARATOR ',') modelname
        from scmuser s
                 inner join usermodel um
                            on s.Account = um.Account
                 inner join systemmodel sm
                            on sm.ModelCode = um.ModelCode
        where s.account = #{account}
          and s.password = #{password}
    </select>
    <select id="queryUsersByPage" resultMap="BaseResultMap">
        select s.*, group_concat(sm.modelname SEPARATOR ',') modelname
        from scmuser s
        inner join usermodel um
        on s.Account = um.Account
        inner join systemmodel sm
        on sm.ModelCode = um.ModelCode
        <where>
            <if test="scmUser.account != null and scmUser.account != ''">
                or s.account = #{scmUser.account}
            </if>
            <if test="scmUser.name != null and scmUser.name != ''">
                or s.name like concat('%',#{scmUser.name},'%')
            </if>
        </where>
        group by s.Account order by CreateDate asc
        limit #{page.currentPage},#{page.pageSize}
    </select>
    <select id="getScmUsersCount" resultType="java.lang.Integer">
        select count(*) from (
        select s.*, group_concat(sm.modelname SEPARATOR ',') modelname
        from scmuser s
        inner join usermodel um
        on s.Account = um.Account
        inner join systemmodel sm
        on sm.ModelCode = um.ModelCode
        <where>
            <if test="scmUser.account != null and scmUser.account != ''">
                or s.account = #{scmUser.account}
            </if>
            <if test="scmUser.name != null and scmUser.name != ''">
                or s.name like concat('%',#{scmUser.name},'%')
            </if>
        </where>
        group by s.account order by s.account desc
        ) count
    </select>

    <delete id="delUserModelByAccount">
        delete from usermodel
        where account = #{account}
    </delete>
    <!--删除用户-->
    <delete id="delUserByAccount">
        delete from scmuser
        where account = #{account}
    </delete>
    <!--检查用户是否存在-->
    <select id="checkScmUser" resultType="com.aowin.domain.ScmUser">
        select * from scmuser
        where account = #{account}
    </select>
    <!--添加用户-->
    <insert id="insertScmUser" >
        insert into scmuser
        values (#{account}, #{password}, #{name}, now(), #{status})
    </insert>
    <insert id="insertModelName">
        insert into usermodel
        values (#{account}, (select modelcode from systemmodel where modelname = #{modelName}));
    </insert>
    <!--修改用户-->
    <update id="updateScmUser">
        update scmuser
        set password=#{password},name=#{name},status=#{status}
        where account = #{account};
    </update>
    <update id="updateModelName">
        update usermodel set modelcode =(select modelcode from systemmodel where modelname = #{modelName}) where account = #{account};
    </update>
    <update id="updateModelCode">
        update usermodel set modelcode =#{modelcode},account = #{account} where account = #{oldaccount};
    </update>
</mapper>